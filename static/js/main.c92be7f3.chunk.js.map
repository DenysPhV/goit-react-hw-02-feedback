{"version":3,"sources":["components/Section/Section.js","components/Statistic/Statistic.js","components/FeedbackOptions/FeedbackOptions.js","App.js","index.js"],"names":["Section","title","children","Statistic","good","neutral","bad","total","positiveFeedback","FeedbackOptions","options","onLeaveFeedback","map","option","onClick","type","App","state","increment","value","setState","prevState","this","totalFeedback","Object","keys","countPositiveFeedbackPercentage","Math","round","React","Component","ReactDom","render","StrictMode","document","getElementById"],"mappings":"mQAAe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,6BAAKD,IACJC,KCJQ,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,iBAEA,OACE,8BACE,+BACE,+BACE,yCACCJ,KAEH,+BACE,4CACCC,KAEH,+BACE,wCACCC,KAEH,+BACE,0CACCC,KAEH,+BACE,6CACCC,EAFH,YCzBO,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,8BACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBAAqBC,QAASH,EAAgBE,GAASE,KAAK,SAA5D,SACGF,GADUA,Q,ICDfG,E,4MACJC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPY,UAAY,SAACC,GAAD,OAAW,WACrB,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAQE,EAAUF,GAAS,Q,4CAQhC,WACE,MAA+BG,KAAKL,MAA5Bb,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBiB,EAAgBnB,EAAOC,EAAUC,EACjCI,EAAUc,OAAOC,KAAKH,KAAKL,OAC3BS,EAAkCC,KAAKC,MAC1CxB,EAAOmB,EAAiB,KAG3B,OACE,gCACE,cAACvB,EAAD,CAASC,MAAO,wBAAhB,SACE,cAACQ,EAAD,CACEC,QAASA,EACTC,gBAAiBW,KAAKJ,cAIzBK,EAAgB,EACf,cAACvB,EAAD,CAASC,MAAO,aAAhB,SACE,cAACE,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,EACPf,iBAAkBkB,MAItB,iD,GA7CQG,IAAMC,WAoDTd,ICnDfe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c92be7f3.chunk.js","sourcesContent":["export default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n","export default function Statistic({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positiveFeedback,\r\n}) {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <li>\r\n          <span>Good:</span>\r\n          {good}\r\n        </li>\r\n        <li>\r\n          <span>Neutral:</span>\r\n          {neutral}\r\n        </li>\r\n        <li>\r\n          <span>Bad:</span>\r\n          {bad}\r\n        </li>\r\n        <li>\r\n          <span>Total:</span>\r\n          {total}\r\n        </li>\r\n        <li>\r\n          <span>Positive:</span>\r\n          {positiveFeedback}%\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      {options.map((option) => (\r\n        <button key={option} onClick={onLeaveFeedback(option)} type=\"button\">\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\nimport Section from './components/Section';\nimport Statistic from './components/Statistic';\nimport FeedbackOptions from './components/FeedbackOptions';\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  increment = (value) => () => {\n    this.setState((prevState) => ({\n      [value]: prevState[value] + 1,\n    }));\n  };\n\n  // countPositiveFeedbackPercentage = (percent) => () => {\n  //   Math.round((good / totalFeedback) * 100);\n  // }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = good + neutral + bad;\n    const options = Object.keys(this.state);\n    const countPositiveFeedbackPercentage = Math.round(\n      (good / totalFeedback) * 100,\n    );\n\n    return (\n      <div>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.increment}\n          ></FeedbackOptions>\n        </Section>\n\n        {totalFeedback > 0 ? (\n          <Section title={'Statistics'}>\n            <Statistic\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedback}\n              positiveFeedback={countPositiveFeedbackPercentage}\n            />\n          </Section>\n        ) : (\n          <div>Noooob!</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}